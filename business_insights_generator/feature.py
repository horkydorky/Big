import pandas as pd
import google.generativeai as genai
import io
from .config import get_google_api_key

def get_gemini_insight(df: pd.DataFrame, question: str) -> str:
    """
    Generates business insights by sending a prompt with data context to the Gemini API.

    Args:
        df (pd.DataFrame): The DataFrame containing the business data.
        question (str): The user's question about the data.

    Returns:
        str: The insight generated by the AI model.
    """
    try:
        # Load the API key securely using our config module
        api_key = get_google_api_key()
        genai.configure(api_key=api_key)
    except ValueError as e:
        # Return an error message if the API key is not found
        return f"Configuration Error: {e}"

    # --- FIX IS HERE ---
    # Initialize the Generative AI model with the stable 'gemini-1.0-pro' name
    model = genai.GenerativeModel('gemini-1.5-flash-latest')

    # --- Prompt Engineering: Give the AI context about the data ---
    # Create a concise summary of the dataframe to send to the AI.
    # We use a string buffer to capture the output of df.info()
    buffer = io.StringIO()
    df.info(buf=buffer)
    info_str = buffer.getvalue()
    
    # Construct a detailed prompt
    prompt = f"""
    You are an expert data analyst. Your task is to provide a clear and concise insight
    based on the provided data summary and the user's question.

    ---
    DATA SUMMARY:
    Here is a summary of the dataset you are analyzing.

    The first 5 rows are:
    {df.head().to_string()}

    The column details, data types, and non-null counts are:
    {info_str}
    ---
    USER QUESTION:
    "{question}"
    ---

    ANALYSIS:
    """

    try:
        # Send the prompt to the model and get the response
        response = model.generate_content(prompt)
        return response.text
    except Exception as e:
        # Handle potential errors during the API call (e.g., network issues)
        return f"An error occurred while communicating with the AI model: {e}"